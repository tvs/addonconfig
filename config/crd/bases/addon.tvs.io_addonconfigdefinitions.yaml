---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: addonconfigdefinitions.addon.tvs.io
spec:
  group: addon.tvs.io
  names:
    kind: AddonConfigDefinition
    listKind: AddonConfigDefinitionList
    plural: addonconfigdefinitions
    singular: addonconfigdefinition
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AddonConfigDefinition is the Schema for the addonconfigdefinitions
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AddonConfigDefinitionSpec defines the desired state of AddonConfigDefinition
            properties:
              dependencies:
                description: Dependencies describes discovery of resources used when
                  templating
                items:
                  description: AddonConfigDefinitionDependencies defines a named dependency
                    for use during templating.
                  properties:
                    name:
                      description: Name defines the top-level name used when providing
                        the referent for templating.
                      type: string
                    target:
                      description: Target defines the mechanism for identifying a
                        resource to provide as a dependency. Target.Name and Target.Selector
                        will have their values rendered with default templating variables
                        provided by an AddonConfig.
                      properties:
                        apiVersion:
                          description: API version of the target referent.
                          type: string
                        constraints:
                          description: Constraints used to identify the constraints
                            for the target.
                          items:
                            description: DependencyConstraint defines type for the
                              dependency constraint object
                            properties:
                              operator:
                                type: string
                            required:
                            - operator
                            type: object
                          type: array
                        kind:
                          description: Kind of the target referent.
                          type: string
                        name:
                          description: Name of the target referent. Mutually exclusive
                            with the selector.
                          type: string
                        selector:
                          description: Label selector used to identify the referent.
                            Must only identify one resource. Mutually exclusive with
                            the explicit name.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In,
                                      NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists
                                      or DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs.
                                A single {key,value} in the matchLabels map is equivalent
                                to an element of matchExpressions, whose key field
                                is "key", the operator is "In", and the values array
                                contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                      - apiVersion
                      - kind
                      type: object
                  required:
                  - name
                  - target
                  type: object
                type: array
              outputResource:
                description: 'OutputResource describes where and how to save the rendered
                  template. Only supports `Secret` and `ConfigMap` TODO(tvs): Figure
                  out how to include metadata on the resource'
                properties:
                  apiVersion:
                    description: API version of the output resource referent.
                    type: string
                  kind:
                    description: Kind of the output resource referent.
                    type: string
                  name:
                    description: Name of the output resource referent.
                    type: string
                required:
                - apiVersion
                - kind
                type: object
              schema:
                description: Schema describes the schema used for validation, pruning,
                  and defaulting of this version of the custom resource.
                type: object
                x-kubernetes-preserve-unknown-fields: true
              template:
                description: Template describes the template used when marshalling
                  the schema into an add-on usable format
                type: string
            required:
            - outputResource
            - template
            type: object
          status:
            description: AddonConfigDefinitionStatus defines the observed state of
              AddonConfigDefinition
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
